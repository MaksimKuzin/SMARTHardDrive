@model SMARTHardDrive.Models.HardDrive
@{
    // Установка заголовка в зависимости от того, является ли модель пустой или нет
    ViewData["Title"] = Model != null && Model.Id != 0 ? "Изменение информации о диске" : "Добавление диска";
}
<h2 class="text-center mb-4">@ViewData["Title"]</h2>

<div class="container">
    <form asp-action="@(Model != null && Model.Id != 0 ? "Edit" : "Create")" method="post" class="needs-validation" novalidate>
        <input type="hidden" asp-for="Id" />

        <div class="row mb-3">
            <label asp-for="Model" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="Model" class="form-control" />
                <span asp-validation-for="Model" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="SerialNumber" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="SerialNumber" class="form-control" />
                <span asp-validation-for="SerialNumber" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="Status" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="Status" class="form-control" />
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="CapacityGB" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="CapacityGB" class="form-control" />
                <span asp-validation-for="CapacityGB" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="ConnectionType" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="ConnectionType" class="form-control" />
                <span asp-validation-for="ConnectionType" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="Location" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="Location" class="form-control" />
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="InstallDate" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="InstallDate" class="form-control" />
                <span asp-validation-for="InstallDate" class="text-danger"></span>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-10 offset-sm-2">
                <button type="submit" class="btn btn-primary">Сохранить</button>
                <a asp-action="Index"
                   class="btn btn-secondary ms-2">Отмена</a>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const serialNumberInput = document.querySelector("input[name='SerialNumber']");
            const purchaseDateInput = document.querySelector("input[name='InstallDate']");
            const form = document.querySelector("form");

            form.addEventListener("submit", function (event) {
                let isValid = true;

                // Проверка, что серийный номер не пустой и состоит из букв и цифр
                const serialNumberValue = serialNumberInput.value.trim();
                if (!/^[A-Za-z0-9]+$/.test(serialNumberValue)) {
                    alert("Серийный номер должен содержать только буквы и цифры.");
                    isValid = false;
                }

                // Проверка, что "Дата приобретения" не позже текущей даты
                const purchaseDateValue = new Date(purchaseDateInput.value);
                const today = new Date();

                if (purchaseDateValue > today) {
                    alert("Дата установки не может быть позже сегодняшней.");
                    isValid = false;
                }

                // Если какая-то проверка не прошла, отменяем отправку формы
                if (!isValid) {
                    event.preventDefault();
                }
            });
        });
    </script>
